<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <artifactId>saep-jmeter</artifactId>
    <groupId>com.lazerycode.jmeter</groupId>
    <version>DEV-SNAPSHOT</version>
    <packaging>pom</packaging>

    <description>
        Performance, load and stress tests for Saep system.

        On this file directory, run "mvn verify -Ptests"
    </description>

    <properties>
        <webapp.protocol>http</webapp.protocol>
        <webapp.host>www.mozilla.com</webapp.host>
        <webapp.port>80</webapp.port>
        <webapp.uris>${project.basedir}/src/test/uris/uris.txt</webapp.uris>
        <jmeter.analysis.maven.plugin.version>1.0.6</jmeter.analysis.maven.plugin.version>
        <jmeter-maven-plugin.version>2.0.3</jmeter-maven-plugin.version>
        <test.duration>30</test.duration>
        <test.threads>10</test.threads>
    </properties>

    <profiles>

        <profile>
            <id>tests</id>
            <build>
                <plugins>
                    <!-- Process tests -->
                    <plugin>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>jmeter-maven-plugin</artifactId>
                        <version>${jmeter-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>test</id>
                                <goals>
                                    <goal>jmeter</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <propertiesUser>
                                <protocol>${webapp.protocol}</protocol>
                                <server>${webapp.host}</server>
                                <port>${webapp.port}</port>

                                <!-- ######### PERFORMANCE TEST ######### -->
                                <!-- Nome desse group thread -->
                                <performThreadgroup00.name>PerformanceTest</performThreadgroup00.name>
                                <!-- Número de threads -->
                                <performThreadgroup00.numberOfThreads>1000</performThreadgroup00.numberOfThreads>
                                <!-- Delay inicial do teste em segundos -->
                                <performThreadgroup00.scheduledDelay>0</performThreadgroup00.scheduledDelay>
                                <!-- Fade in das threads em segundos -->
                                <performThreadgroup00.rampUp>0</performThreadgroup00.rampUp>
                                <!-- Taxa de transferência de todas as threads do grupo por minuto -->
                                <performThreadgroup00.numberOfLoops>1</performThreadgroup00.numberOfLoops>
                                <!-- Usar urls do arquivo -->
                                <performThreadgroup00.dataFile>${webapp.uris}</performThreadgroup00.dataFile>


                                <!-- ######### LOAD TEST ######### -->
                                <!-- Nome desse group thread -->
                                <loadThreadgroup00.name>LoadTest1</loadThreadgroup00.name>
                                <!-- Número de threads -->
                                <loadThreadgroup00.numberOfThreads>2000</loadThreadgroup00.numberOfThreads>
                                <!-- Delay inicial do teste em segundos -->
                                <loadThreadgroup00.scheduledDelay>0</loadThreadgroup00.scheduledDelay>
                                <!-- Fade in das threads em segundos -->
                                <loadThreadgroup00.rampUp>0</loadThreadgroup00.rampUp>
                                <!-- Taxa de transferência de todas as threads do grupo por minuto -->
                                <loadThreadgroup00.numberOfLoops>1</loadThreadgroup00.numberOfLoops>
                                <!-- Usar urls do arquivo -->
                                <loadThreadgroup00.dataFile>${webapp.uris}</loadThreadgroup00.dataFile>

                                <!-- Nome desse group thread -->
                                <loadThreadgroup01.name>LoadTest2</loadThreadgroup01.name>
                                <!-- Número de threads -->
                                <loadThreadgroup01.numberOfThreads>3000</loadThreadgroup01.numberOfThreads>
                                <!-- Delay inicial do teste em segundos -->
                                <loadThreadgroup01.scheduledDelay>0</loadThreadgroup01.scheduledDelay>
                                <!-- Fade in das threads em segundos -->
                                <loadThreadgroup01.rampUp>0</loadThreadgroup01.rampUp>
                                <!-- Taxa de transferência de todas as threads do grupo por minuto -->
                                <loadThreadgroup01.numberOfLoops>1</loadThreadgroup01.numberOfLoops>
                                <!-- Usar urls do arquivo -->
                                <loadThreadgroup01.dataFile>${webapp.uris}</loadThreadgroup01.dataFile>

                                <!-- Nome desse group thread -->
                                <loadThreadgroup02.name>LoadTest3</loadThreadgroup02.name>
                                <!-- Número de threads -->
                                <loadThreadgroup02.numberOfThreads>4000</loadThreadgroup02.numberOfThreads>
                                <!-- Delay inicial do teste em segundos -->
                                <loadThreadgroup02.scheduledDelay>0</loadThreadgroup02.scheduledDelay>
                                <!-- Fade in das threads em segundos -->
                                <loadThreadgroup02.rampUp>0</loadThreadgroup02.rampUp>
                                <!-- Taxa de transferência de todas as threads do grupo por minuto -->
                                <loadThreadgroup02.numberOfLoops>1</loadThreadgroup02.numberOfLoops>
                                <!-- Usar urls do arquivo -->
                                <loadThreadgroup02.dataFile>${webapp.uris}</loadThreadgroup02.dataFile>


                                <!-- ######### STRESS TEST ######### -->
                                <!-- Nome desse group thread -->
                                <stressThreadgroup00.name>StressTest1</stressThreadgroup00.name>
                                <!-- Número de threads -->
                                <stressThreadgroup00.numberOfThreads>5000</stressThreadgroup00.numberOfThreads>
                                <!-- Duração do teste em segundos -->
                                <stressThreadgroup00.scheduledDuration>60</stressThreadgroup00.scheduledDuration>
                                <!-- Fade in das threads em segundos -->
                                <stressThreadgroup00.rampUp>0</stressThreadgroup00.rampUp>
                                <!-- Usar urls do arquivo -->
                                <stressThreadgroup00.dataFile>${webapp.uris}</stressThreadgroup00.dataFile>

                                <!-- Nome desse group thread -->
                                <stressThreadgroup01.name>StressTest2</stressThreadgroup01.name>
                                <!-- Número de threads -->
                                <stressThreadgroup01.numberOfThreads>6000</stressThreadgroup01.numberOfThreads>
                                <!-- Duração do teste em segundos -->
                                <stressThreadgroup01.scheduledDuration>60</stressThreadgroup01.scheduledDuration>
                                <!-- Fade in das threads em segundos -->
                                <stressThreadgroup01.rampUp>0</stressThreadgroup01.rampUp>
                                <!-- Usar urls do arquivo -->
                                <stressThreadgroup01.dataFile>${webapp.uris}</stressThreadgroup01.dataFile>

                                <!-- Nome desse group thread -->
                                <stressThreadgroup02.name>StressTest3</stressThreadgroup02.name>
                                <!-- Número de threads -->
                                <stressThreadgroup02.numberOfThreads>7000</stressThreadgroup02.numberOfThreads>
                                <!-- Duração do teste em segundos -->
                                <stressThreadgroup02.scheduledDuration>60</stressThreadgroup02.scheduledDuration>
                                <!-- Fade in das threads em segundos -->
                                <stressThreadgroup02.rampUp>0</stressThreadgroup02.rampUp>
                                <!-- Usar urls do arquivo -->
                                <stressThreadgroup02.dataFile>${webapp.uris}</stressThreadgroup02.dataFile>
                            </propertiesUser>
                            <!-- Ignore erros on show result requests -->
                            <ignoreResultFailures>true</ignoreResultFailures>
                            <!-- Regex for process jmeter test files -->
                            <testFilesIncluded>
                                <jMeterTestFile>*-tests.jmx</jMeterTestFile>
                            </testFilesIncluded>
                        </configuration>
                    </plugin>

                    <!-- Make output html -->
                    <plugin>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>jmeter-analysis-maven-plugin</artifactId>
                        <version>${jmeter.analysis.maven.plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>analyze</goal>
                                </goals>
                                <phase>post-integration-test</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- Source file that contains jmeter result jtl data -->
                            <source>${project.build.directory}/jmeter/results/*</source>

                            <!-- Directory where to store analysis report files -->
                            <targetDirectory>${project.build.directory}/reports</targetDirectory>

                            <!-- Process all files found by the pattern defined in <source> -->
                            <processAllFilesFound>true</processAllFilesFound>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- If need use a SNAPSHOT version of plugin -->
    <pluginRepositories>
        <pluginRepository>
            <id>sonatype-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </pluginRepository>
    </pluginRepositories>
    <name>saep-jmeter</name>
</project>